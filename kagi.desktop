;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Fri Aug 18 18:45:00 2017
;; Desktop file format version 208
;; Emacs version 25.2.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (22934 46876 280151 0) (desktop . "208") "paulj@kagi.local" nil nil ((((font-backend mac-ct) (fontsize . 0) (font . "-*-Menlo-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 2) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "#657b83") (background-color . "#fdf6e3") (line-spacing) (left-fringe . 8) (right-fringe . 8) (menu-bar-lines . 1) (tool-bar-lines . 0) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . bar) (scroll-bar-width . 0) (scroll-bar-height . 0) (alpha) (fullscreen) (display-type . color) (background-mode . light) (cursor-color . "#657b83") (environment) (powerline-cache) (frameset--id . "185C-2C55-9DB5-26F0") (frameset--mini t . t) (modeline . t) (minibuffer . t) (unsplittable) (right-divider-width . 0) (bottom-divider-width . 0) (icon-name) (visibility . t) (display . "kagi.local") (explicit-name) (tool-bar-position . top) (height . 60) (width . 202) (left . 0) (top . 23)) ((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 56) (min-pixel-width . 70) (min-pixel-height-ignore . 42) (min-pixel-width-ignore . 35) (min-pixel-height-safe . 14) (min-pixel-width-safe . 14)) leaf (pixel-width . 1430) (pixel-height . 826) (total-width . 204) (total-height . 59) (normal-height . 1.0) (normal-width . 1.0) (buffer "my_init.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 11011) (start . 5424))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '("metaweb" "xml-rpc"))
(setq regexp-search-ring '("use-pack" "xml-r"))
(setq register-alist nil)
(setq file-name-history '("~/.emacs.d/" "/Users/paulj/tmp/Backtrace.txt" "~/.emacs.d/kagi.el" "~/.emacs.d/my_init.el" "~/.emacs.d/my_init.org"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/Users/paulj/.emacs.d/my_init.org"
  "my_init.org"
  'org-mode
  '(abbrev-mode visual-line-mode override-global-mode adaptive-wrap-prefix-mode beacon-mode which-key-mode anzu-mode artbollocks-mode flyspell-mode buffer-face-mode)
  11011
  '(11009 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (case-fold-search . t) (truncate-lines . t))
  '((mark-ring (11009 8020 3203 98509 1 44284 44319 44304 44497 44304 44550 44319 98483 11010))))

(desktop-create-buffer 208
  "/Users/paulj/.emacs.d/my_init.el"
  "my_init.el"
  'emacs-lisp-mode
  '(abbrev-mode override-global-mode rainbow-delimiters-mode beacon-mode which-key-mode anzu-mode flyspell-mode)
  19811
  '(930 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (443 930 19692 19692 19718))))

(desktop-create-buffer 208
  "/Users/paulj/tmp/Backtrace.txt"
  "Backtrace.txt"
  'org-mode
  '(abbrev-mode visual-line-mode override-global-mode adaptive-wrap-prefix-mode beacon-mode which-key-mode anzu-mode artbollocks-mode flyspell-mode buffer-face-mode)
  18741
  '(18741 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (truncate-lines . t))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/paulj/.emacs.d/kagi.el"
  "kagi.el"
  'emacs-lisp-mode
  '(abbrev-mode override-global-mode rainbow-delimiters-mode beacon-mode which-key-mode anzu-mode flyspell-mode rainbow-mode)
  885
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1))))

(desktop-create-buffer 208
  "/Users/paulj/gtd/wunderlist.org"
  "wunderlist.org"
  'org-mode
  '(abbrev-mode visual-line-mode override-global-mode adaptive-wrap-prefix-mode beacon-mode which-key-mode anzu-mode artbollocks-mode flyspell-mode buffer-face-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (truncate-lines))
  '((mark-ring nil)))

